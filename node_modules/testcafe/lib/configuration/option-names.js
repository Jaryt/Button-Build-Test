"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    src: 'src',
    browsers: 'browsers',
    concurrency: 'concurrency',
    filter: 'filter',
    filterTestGrep: 'filter.testGrep',
    filterFixtureGrep: 'filter.fixtureGrep',
    reporter: 'reporter',
    ssl: 'ssl',
    speed: 'speed',
    screenshots: 'screenshots',
    screenshotPath: 'screenshotPath',
    screenshotPathPattern: 'screenshotPathPattern',
    takeScreenshotsOnFails: 'takeScreenshotsOnFails',
    proxyBypass: 'proxyBypass',
    appCommand: 'appCommand',
    appInitDelay: 'appInitDelay',
    skipJsErrors: 'skipJsErrors',
    quarantineMode: 'quarantineMode',
    debugMode: 'debugMode',
    debugOnFail: 'debugOnFail',
    skipUncaughtErrors: 'skipUncaughtErrors',
    stopOnFirstFail: 'stopOnFirstFail',
    selectorTimeout: 'selectorTimeout',
    assertionTimeout: 'assertionTimeout',
    pageLoadTimeout: 'pageLoadTimeout',
    videoPath: 'videoPath',
    videoOptions: 'videoOptions',
    videoEncodingOptions: 'videoEncodingOptions',
    tsConfigPath: 'tsConfigPath',
    clientScripts: 'clientScripts',
    requestHooks: 'requestHooks',
    retryTestPages: 'retryTestPages',
    hostname: 'hostname',
    port1: 'port1',
    port2: 'port2',
    developmentMode: 'developmentMode',
    disablePageReloads: 'disablePageReloads',
    disablePageCaching: 'disablePageCaching',
    disableScreenshots: 'disableScreenshots',
    debugLogger: 'debugLogger'
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLW5hbWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ3VyYXRpb24vb3B0aW9uLW5hbWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0JBQWU7SUFDWCxHQUFHLEVBQXFCLEtBQUs7SUFDN0IsUUFBUSxFQUFnQixVQUFVO0lBQ2xDLFdBQVcsRUFBYSxhQUFhO0lBQ3JDLE1BQU0sRUFBa0IsUUFBUTtJQUNoQyxjQUFjLEVBQVUsaUJBQWlCO0lBQ3pDLGlCQUFpQixFQUFPLG9CQUFvQjtJQUM1QyxRQUFRLEVBQWdCLFVBQVU7SUFDbEMsR0FBRyxFQUFxQixLQUFLO0lBQzdCLEtBQUssRUFBbUIsT0FBTztJQUMvQixXQUFXLEVBQWEsYUFBYTtJQUNyQyxjQUFjLEVBQVUsZ0JBQWdCO0lBQ3hDLHFCQUFxQixFQUFHLHVCQUF1QjtJQUMvQyxzQkFBc0IsRUFBRSx3QkFBd0I7SUFDaEQsV0FBVyxFQUFhLGFBQWE7SUFDckMsVUFBVSxFQUFjLFlBQVk7SUFDcEMsWUFBWSxFQUFZLGNBQWM7SUFDdEMsWUFBWSxFQUFZLGNBQWM7SUFDdEMsY0FBYyxFQUFVLGdCQUFnQjtJQUN4QyxTQUFTLEVBQWUsV0FBVztJQUNuQyxXQUFXLEVBQWEsYUFBYTtJQUNyQyxrQkFBa0IsRUFBTSxvQkFBb0I7SUFDNUMsZUFBZSxFQUFTLGlCQUFpQjtJQUN6QyxlQUFlLEVBQVMsaUJBQWlCO0lBQ3pDLGdCQUFnQixFQUFRLGtCQUFrQjtJQUMxQyxlQUFlLEVBQVMsaUJBQWlCO0lBQ3pDLFNBQVMsRUFBZSxXQUFXO0lBQ25DLFlBQVksRUFBWSxjQUFjO0lBQ3RDLG9CQUFvQixFQUFJLHNCQUFzQjtJQUM5QyxZQUFZLEVBQVksY0FBYztJQUN0QyxhQUFhLEVBQVcsZUFBZTtJQUN2QyxZQUFZLEVBQVksY0FBYztJQUN0QyxjQUFjLEVBQVUsZ0JBQWdCO0lBQ3hDLFFBQVEsRUFBZ0IsVUFBVTtJQUNsQyxLQUFLLEVBQW1CLE9BQU87SUFDL0IsS0FBSyxFQUFtQixPQUFPO0lBQy9CLGVBQWUsRUFBUyxpQkFBaUI7SUFDekMsa0JBQWtCLEVBQU0sb0JBQW9CO0lBQzVDLGtCQUFrQixFQUFNLG9CQUFvQjtJQUM1QyxrQkFBa0IsRUFBTSxvQkFBb0I7SUFDNUMsV0FBVyxFQUFhLGFBQWE7Q0FDeEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBzcmM6ICAgICAgICAgICAgICAgICAgICAnc3JjJyxcbiAgICBicm93c2VyczogICAgICAgICAgICAgICAnYnJvd3NlcnMnLFxuICAgIGNvbmN1cnJlbmN5OiAgICAgICAgICAgICdjb25jdXJyZW5jeScsXG4gICAgZmlsdGVyOiAgICAgICAgICAgICAgICAgJ2ZpbHRlcicsXG4gICAgZmlsdGVyVGVzdEdyZXA6ICAgICAgICAgJ2ZpbHRlci50ZXN0R3JlcCcsXG4gICAgZmlsdGVyRml4dHVyZUdyZXA6ICAgICAgJ2ZpbHRlci5maXh0dXJlR3JlcCcsXG4gICAgcmVwb3J0ZXI6ICAgICAgICAgICAgICAgJ3JlcG9ydGVyJyxcbiAgICBzc2w6ICAgICAgICAgICAgICAgICAgICAnc3NsJyxcbiAgICBzcGVlZDogICAgICAgICAgICAgICAgICAnc3BlZWQnLFxuICAgIHNjcmVlbnNob3RzOiAgICAgICAgICAgICdzY3JlZW5zaG90cycsXG4gICAgc2NyZWVuc2hvdFBhdGg6ICAgICAgICAgJ3NjcmVlbnNob3RQYXRoJyxcbiAgICBzY3JlZW5zaG90UGF0aFBhdHRlcm46ICAnc2NyZWVuc2hvdFBhdGhQYXR0ZXJuJyxcbiAgICB0YWtlU2NyZWVuc2hvdHNPbkZhaWxzOiAndGFrZVNjcmVlbnNob3RzT25GYWlscycsXG4gICAgcHJveHlCeXBhc3M6ICAgICAgICAgICAgJ3Byb3h5QnlwYXNzJyxcbiAgICBhcHBDb21tYW5kOiAgICAgICAgICAgICAnYXBwQ29tbWFuZCcsXG4gICAgYXBwSW5pdERlbGF5OiAgICAgICAgICAgJ2FwcEluaXREZWxheScsXG4gICAgc2tpcEpzRXJyb3JzOiAgICAgICAgICAgJ3NraXBKc0Vycm9ycycsXG4gICAgcXVhcmFudGluZU1vZGU6ICAgICAgICAgJ3F1YXJhbnRpbmVNb2RlJyxcbiAgICBkZWJ1Z01vZGU6ICAgICAgICAgICAgICAnZGVidWdNb2RlJyxcbiAgICBkZWJ1Z09uRmFpbDogICAgICAgICAgICAnZGVidWdPbkZhaWwnLFxuICAgIHNraXBVbmNhdWdodEVycm9yczogICAgICdza2lwVW5jYXVnaHRFcnJvcnMnLFxuICAgIHN0b3BPbkZpcnN0RmFpbDogICAgICAgICdzdG9wT25GaXJzdEZhaWwnLFxuICAgIHNlbGVjdG9yVGltZW91dDogICAgICAgICdzZWxlY3RvclRpbWVvdXQnLFxuICAgIGFzc2VydGlvblRpbWVvdXQ6ICAgICAgICdhc3NlcnRpb25UaW1lb3V0JyxcbiAgICBwYWdlTG9hZFRpbWVvdXQ6ICAgICAgICAncGFnZUxvYWRUaW1lb3V0JyxcbiAgICB2aWRlb1BhdGg6ICAgICAgICAgICAgICAndmlkZW9QYXRoJyxcbiAgICB2aWRlb09wdGlvbnM6ICAgICAgICAgICAndmlkZW9PcHRpb25zJyxcbiAgICB2aWRlb0VuY29kaW5nT3B0aW9uczogICAndmlkZW9FbmNvZGluZ09wdGlvbnMnLFxuICAgIHRzQ29uZmlnUGF0aDogICAgICAgICAgICd0c0NvbmZpZ1BhdGgnLFxuICAgIGNsaWVudFNjcmlwdHM6ICAgICAgICAgICdjbGllbnRTY3JpcHRzJyxcbiAgICByZXF1ZXN0SG9va3M6ICAgICAgICAgICAncmVxdWVzdEhvb2tzJyxcbiAgICByZXRyeVRlc3RQYWdlczogICAgICAgICAncmV0cnlUZXN0UGFnZXMnLFxuICAgIGhvc3RuYW1lOiAgICAgICAgICAgICAgICdob3N0bmFtZScsXG4gICAgcG9ydDE6ICAgICAgICAgICAgICAgICAgJ3BvcnQxJyxcbiAgICBwb3J0MjogICAgICAgICAgICAgICAgICAncG9ydDInLFxuICAgIGRldmVsb3BtZW50TW9kZTogICAgICAgICdkZXZlbG9wbWVudE1vZGUnLFxuICAgIGRpc2FibGVQYWdlUmVsb2FkczogICAgICdkaXNhYmxlUGFnZVJlbG9hZHMnLFxuICAgIGRpc2FibGVQYWdlQ2FjaGluZzogICAgICdkaXNhYmxlUGFnZUNhY2hpbmcnLFxuICAgIGRpc2FibGVTY3JlZW5zaG90czogICAgICdkaXNhYmxlU2NyZWVuc2hvdHMnLFxuICAgIGRlYnVnTG9nZ2VyOiAgICAgICAgICAgICdkZWJ1Z0xvZ2dlcidcbn07XG4iXX0=