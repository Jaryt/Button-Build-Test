"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const make_dir_1 = __importDefault(require("make-dir"));
const temp_directory_1 = __importDefault(require("../../../../../utils/temp-directory"));
const promisified_functions_1 = require("../../../../../utils/promisified-functions");
async function default_1(proxyHostName) {
    const tempDir = await temp_directory_1.default.createDirectory('chrome-profile');
    const profileDirName = path_1.default.join(tempDir.path, 'Default');
    await make_dir_1.default(profileDirName);
    const preferences = {
        'credentials_enable_service': false,
        'devtools': {
            'preferences': {
                'currentDockState': '"undocked"',
                'lastDockState': '"bottom"'
            }
        },
        'plugins': {
            'always_open_pdf_externally': true
        },
        'profile': {
            'content_settings': {
                'exceptions': {
                    'automatic_downloads': {
                        [proxyHostName]: { setting: 1 }
                    }
                }
            },
            'password_manager_enabled': false
        },
        'translate': {
            'enabled': false
        }
    };
    await promisified_functions_1.writeFile(path_1.default.join(profileDirName, 'Preferences'), JSON.stringify(preferences));
    await promisified_functions_1.writeFile(path_1.default.join(tempDir.path, 'First Run'), '');
    return tempDir;
}
exports.default = default_1;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9icm93c2VyL3Byb3ZpZGVyL2J1aWx0LWluL2RlZGljYXRlZC9jaHJvbWUvY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdEQUF3QjtBQUN4Qix3REFBK0I7QUFDL0IseUZBQWdFO0FBQ2hFLHNGQUF1RTtBQUd4RCxLQUFLLG9CQUFXLGFBQWE7SUFDeEMsTUFBTSxPQUFPLEdBQVUsTUFBTSx3QkFBYSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdFLE1BQU0sY0FBYyxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUUxRCxNQUFNLGtCQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFFOUIsTUFBTSxXQUFXLEdBQUc7UUFDaEIsNEJBQTRCLEVBQUUsS0FBSztRQUVuQyxVQUFVLEVBQUU7WUFDUixhQUFhLEVBQUU7Z0JBQ1gsa0JBQWtCLEVBQUUsWUFBWTtnQkFDaEMsZUFBZSxFQUFLLFVBQVU7YUFDakM7U0FDSjtRQUNELFNBQVMsRUFBRTtZQUNQLDRCQUE0QixFQUFFLElBQUk7U0FDckM7UUFDRCxTQUFTLEVBQUU7WUFDUCxrQkFBa0IsRUFBRTtnQkFDaEIsWUFBWSxFQUFFO29CQUNWLHFCQUFxQixFQUFFO3dCQUNuQixDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRTtxQkFDbEM7aUJBQ0o7YUFDSjtZQUVELDBCQUEwQixFQUFFLEtBQUs7U0FDcEM7UUFFRCxXQUFXLEVBQUU7WUFDVCxTQUFTLEVBQUUsS0FBSztTQUNuQjtLQUNKLENBQUM7SUFFRixNQUFNLGlDQUFTLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLE1BQU0saUNBQVMsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFMUQsT0FBTyxPQUFPLENBQUM7QUFDbkIsQ0FBQztBQXZDRCw0QkF1Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBtYWtlRGlyIGZyb20gJ21ha2UtZGlyJztcbmltcG9ydCBUZW1wRGlyZWN0b3J5IGZyb20gJy4uLy4uLy4uLy4uLy4uL3V0aWxzL3RlbXAtZGlyZWN0b3J5JztcbmltcG9ydCB7IHdyaXRlRmlsZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3V0aWxzL3Byb21pc2lmaWVkLWZ1bmN0aW9ucyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gKHByb3h5SG9zdE5hbWUpIHtcbiAgICBjb25zdCB0ZW1wRGlyICAgICAgICA9IGF3YWl0IFRlbXBEaXJlY3RvcnkuY3JlYXRlRGlyZWN0b3J5KCdjaHJvbWUtcHJvZmlsZScpO1xuICAgIGNvbnN0IHByb2ZpbGVEaXJOYW1lID0gcGF0aC5qb2luKHRlbXBEaXIucGF0aCwgJ0RlZmF1bHQnKTtcblxuICAgIGF3YWl0IG1ha2VEaXIocHJvZmlsZURpck5hbWUpO1xuXG4gICAgY29uc3QgcHJlZmVyZW5jZXMgPSB7XG4gICAgICAgICdjcmVkZW50aWFsc19lbmFibGVfc2VydmljZSc6IGZhbHNlLFxuXG4gICAgICAgICdkZXZ0b29scyc6IHtcbiAgICAgICAgICAgICdwcmVmZXJlbmNlcyc6IHtcbiAgICAgICAgICAgICAgICAnY3VycmVudERvY2tTdGF0ZSc6ICdcInVuZG9ja2VkXCInLFxuICAgICAgICAgICAgICAgICdsYXN0RG9ja1N0YXRlJzogICAgJ1wiYm90dG9tXCInXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdwbHVnaW5zJzoge1xuICAgICAgICAgICAgJ2Fsd2F5c19vcGVuX3BkZl9leHRlcm5hbGx5JzogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAncHJvZmlsZSc6IHtcbiAgICAgICAgICAgICdjb250ZW50X3NldHRpbmdzJzoge1xuICAgICAgICAgICAgICAgICdleGNlcHRpb25zJzoge1xuICAgICAgICAgICAgICAgICAgICAnYXV0b21hdGljX2Rvd25sb2Fkcyc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFtwcm94eUhvc3ROYW1lXTogeyBzZXR0aW5nOiAxIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICdwYXNzd29yZF9tYW5hZ2VyX2VuYWJsZWQnOiBmYWxzZVxuICAgICAgICB9LFxuXG4gICAgICAgICd0cmFuc2xhdGUnOiB7XG4gICAgICAgICAgICAnZW5hYmxlZCc6IGZhbHNlXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYXdhaXQgd3JpdGVGaWxlKHBhdGguam9pbihwcm9maWxlRGlyTmFtZSwgJ1ByZWZlcmVuY2VzJyksIEpTT04uc3RyaW5naWZ5KHByZWZlcmVuY2VzKSk7XG4gICAgYXdhaXQgd3JpdGVGaWxlKHBhdGguam9pbih0ZW1wRGlyLnBhdGgsICdGaXJzdCBSdW4nKSwgJycpO1xuXG4gICAgcmV0dXJuIHRlbXBEaXI7XG59XG4iXX0=